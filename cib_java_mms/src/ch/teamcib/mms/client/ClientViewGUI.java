package ch.teamcib.mms.client;

import java.awt.*;
import javax.swing.text.*;

/*
 * ClientViewGUI.java
 *
 * Created on 12.11.2009, 18:53:17
 */

/**
 * GUI-class 
 *
 * @author cYnaY
 */
public class ClientViewGUI extends javax.swing.JFrame implements ClientViewInterface {

    private String message;
    private ClientView clientView = null;

    /**
     * Constructor
     *
     * @param clientView    the clientView to attach
     */
    public ClientViewGUI(ClientView clientView) {
        this.clientView = clientView;
        clientView.addView(this);
        initComponents();
    }

    /** Creates new form ClientViewGUI */
    public ClientViewGUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
        });

        jButton1.setText("send");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jTextPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 421, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 426, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.sendText();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        if(evt.getKeyCode() == 10) {    // Falls taste == ENTER
            this.sendText();
	}
    }//GEN-LAST:event_jTextField1KeyPressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        clientView.client.sendCommand("&cmd&exit");
    }//GEN-LAST:event_formWindowClosing

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        if (evt.getClickCount() == 2) {          // Double-click
            jTextField1.setText("/" + jList1.getSelectedValue().toString() + "/" );
        }
    }//GEN-LAST:event_jList1MouseClicked


    /**
     * Sending text from the TextField
     */
    private void sendText(){
        if(!this.jTextField1.getText().equals("")){
            String text = this.jTextField1.getText();
            if(text.startsWith("/")){
                String toNick = text.split("/")[1];
                String fromNick = "<" + clientView.client.getName() + ">";
                text = "&pmsg&" + toNick + "&" + fromNick + text.split("/")[2] ;
                System.out.println(text);
                clientView.client.sendCommand(text);
            } else {
                clientView.client.sendMessage(text);
            }

            this.jTextField1.setText("");
        }
    }


    /**
     * Start the GUI
     *
     * @param clientView    the clientView to which the GUI is connected
     */
    public static void execute(ClientView clientView){
        final ClientView cv = clientView;

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientViewGUI(cv).setVisible(true);
            }
        });
    }

    /**
     * Update GUI
     *
     * @param isMessage     Is it a message to print or command
     */
    public void update(boolean isMessage) {
        if(isMessage){
            message = clientView.getMessage();
            //this.jTextArea1.append(message + "\n");
            updateTextPane(message);
        } else {
            this.jList1.setModel(new javax.swing.AbstractListModel() {
                String[] strings =  clientView.getUserString().split("&");
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
        }
    }

    /**
     * Update the TextPane
     * Check what type of message it is and color it
     *
     * @param msg   the message-string
     */
    public void updateTextPane(String msg){
        
        StyledDocument sd = this.jTextPane1.getStyledDocument();
        try{

            SimpleAttributeSet set = new SimpleAttributeSet();

            if(msg.startsWith("#")){
                StyleConstants.setForeground(set, Color.cyan);
            } else if(msg.startsWith("<" + clientView.client.getName())){
                StyleConstants.setForeground(set, Color.green);
            } else if(msg.startsWith("&pmsg&")){
                msg = msg.split("&")[2];
                StyleConstants.setForeground(set, Color.red);
            }
            sd.insertString(sd.getLength(), msg + "\n", set);

        } catch (Exception e){}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables

}
